
scalar JSON
scalar Date

type Credential {
    _id: ID!
    type: String!
    name: String!
    data: JSON!
    createdAt: Date!
}

type Stage {
    _id: ID!
    status: String!
    startAt: Date
    doneAt: Date
}

type Build {
    _id: ID!
    number: Int!
    status: String!
    startAt: Date
    doneAt: Date
    pusher: JSON
    commits: [JSON]
    stages: [Stage]!
}

type Job {
    _id: ID!
    name: String!
    repoType: String!
    cdFilePath: String!
    description: String
    createdAt: Date!
    repoUrl: String
    branch: String!
    credential: ID
    lastBuild: Build
    builds: [Build]!
    webhookUrl: String!
    status: String!
}

type CheckJobNameRes {
    valid: Boolean!
}

type CheckCredentialNameRes {
    valid: Boolean!
}

type Query {
    allJobs: [Job!]!
    allCredentials: [Credential!]!
    checkJobName(name: String! currentJobId: ID): CheckJobNameRes!
    checkCredentialName(name: String! currentCredentialId: ID): CheckCredentialNameRes!
    jobDetails(id: ID!): Job!
    buildDetails(id: ID!): Build!
}

type Mutation {
    createJob(name: String!): Job!
    deleteJob(id: ID!): String!
    updateJob(id: ID! name: String repoType: String repoUrl: String branch: String credentialId: String description: String cdFilePath: String): Job!

    createCredential(name: String! type: String! username: String password: String sshLocation: String): Credential!
    updateCredential(id: ID! name: String type: String username: String password: String sshLocation: String): Credential!
    deleteCredential(id: ID!): String!

    play(id: ID!): Build!
}
